name: Build

on:
  push:
    paths-ignore:
      - "docs/**"
    branches: [master]
  pull_request:
    paths-ignore:
      - "docs/**"
    types:
      - opened
      - synchronize
      - reopened

# see: https://www.strangebuzz.com/en/blog/setting-a-ci-cd-workflow-for-a-symfony-project-thanks-to-the-github-actions
# and https://antonshell.me/en/post/github-actions-symfony
# and https://github.com/shivammathur/setup-php/blob/master/examples/symfony-postgres.yml
jobs:
  build:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: postgres
    #     ports:
    #       - 5432/tcp
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ["8.2", "8.3"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, pgsql, dom, filter, gd, json, mbstring, pdo
        env:
          update: true

      - name: Print PHP version
        run: echo ${{ steps.setup-php.outputs.php-version }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # —— Symfony ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: |
          echo 'deb [trusted=yes] https://repo.symfony.com/apt/ /' |sudo tee /etc/apt/sources.list.d/symfony-cli.list
          sudo apt update
          sudo apt install symfony-cli 
          symfony check:requirements   
          php bin/console -V
      # —— Code style —— (Based on this package: https://github.com/OskarStark/php-cs-fixer-ga)
      #- name: PHP-CS-Fixer
      #  uses: docker://oskarstark/php-cs-fixer-ga
      #  with:
      #    args: --config=.php_cs.dist --diff --dry-run

      - name: Setup Database
        run: |
          docker-compose up -d postgres
          sleep 10
          docker ps -a
      - name: Run Migrations
        run: |
          php ./bin/console doctrine:schema:create -n
          php ./bin/console doctrine:fixtures:load --purge-with-truncate -n

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md
      - name: Run Tests
        run: |
          composer run-script test
